
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  auth_source: 'auth_source',
  google_id: 'google_id',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  display_name: 'display_name',
  profile_pic: 'profile_pic',
  nickname: 'nickname',
  given_name: 'given_name',
  family_name: 'family_name',
  password_hash: 'password_hash',
  email: 'email',
  disabled: 'disabled'
};

exports.Prisma.RelationLoadStrategy = {
  query: 'query',
  join: 'join'
};

exports.Prisma.RoleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description'
};

exports.Prisma.UserRoleScalarFieldEnum = {
  role_id: 'role_id',
  user_id: 'user_id',
  createdAt: 'createdAt'
};

exports.Prisma.FocusAreaScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.PoliciesScalarFieldEnum = {
  id: 'id',
  description: 'description',
  policy_number: 'policy_number',
  focus_area_id: 'focus_area_id'
};

exports.Prisma.TimelineOptionsScalarFieldEnum = {
  id: 'id',
  title: 'title'
};

exports.Prisma.StatusOptionsScalarFieldEnum = {
  id: 'id',
  title: 'title'
};

exports.Prisma.StrategyScalarFieldEnum = {
  id: 'id',
  content: 'content',
  last_comms_date: 'last_comms_date',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  policy_id: 'policy_id',
  strategy_number: 'strategy_number',
  timeline_id: 'timeline_id',
  status_id: 'status_id'
};

exports.Prisma.ImplementerScalarFieldEnum = {
  id: 'id',
  name: 'name',
  emails: 'emails',
  phone_numbers: 'phone_numbers',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  is_board: 'is_board',
  is_department: 'is_department',
  is_school: 'is_school'
};

exports.Prisma.StakeholderScalarFieldEnum = {
  id: 'id',
  name: 'name',
  organization_name: 'organization_name',
  emails: 'emails',
  phone_numbers: 'phone_numbers',
  strategy_id: 'strategy_id'
};

exports.Prisma.StrategyImplementerScalarFieldEnum = {
  implementer_id: 'implementer_id',
  strategy_id: 'strategy_id',
  order_number: 'order_number',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CommentScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  strategy_id: 'strategy_id',
  parent_id: 'parent_id',
  content: 'content',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Role: 'Role',
  UserRole: 'UserRole',
  FocusArea: 'FocusArea',
  Policies: 'Policies',
  TimelineOptions: 'TimelineOptions',
  StatusOptions: 'StatusOptions',
  Strategy: 'Strategy',
  Implementer: 'Implementer',
  Stakeholder: 'Stakeholder',
  StrategyImplementer: 'StrategyImplementer',
  Comment: 'Comment'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/timothyadams/dev/cpic_tracker_backend/prisma/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "moduleFormat": "esm",
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin",
        "native": true
      }
    ],
    "previewFeatures": [
      "relationJoins"
    ],
    "sourceFilePath": "/Users/timothyadams/dev/cpic_tracker_backend/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../..",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider        = \"prisma-client-js\"\n  output          = \"./generated/prisma\"\n  moduleFormat    = \"esm\"\n  previewFeatures = [\"relationJoins\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id                    String        @id @default(uuid())\n  auth_source           String        @default(\"self\")\n  google_id             String?       @unique\n  createdAt             DateTime      @default(now())\n  updatedAt             DateTime      @updatedAt\n  display_name          String?       @unique\n  profile_pic           String?\n  nickname              String?\n  given_name            String?\n  family_name           String?\n  password_hash         String?\n  email                 String?       @unique\n  disabled              Boolean       @default(false)\n  assigned_implementers Implementer[] @relation(\"SMEtoImplementer\")\n  userRoles             UserRole[]\n  comments              Comment[]\n}\n\nmodel Role {\n  id          String     @id @default(uuid())\n  name        String     @unique @db.VarChar(75)\n  description String     @db.VarChar(255)\n  userRoles   UserRole[]\n}\n\nmodel UserRole {\n  role_id   String\n  user_id   String\n  createdAt DateTime @default(now())\n  role      Role     @relation(fields: [role_id], references: [id])\n  user      User     @relation(fields: [user_id], references: [id])\n\n  @@id([user_id, role_id])\n}\n\nmodel FocusArea {\n  id       Int        @id @default(autoincrement())\n  name     String\n  policies Policies[]\n}\n\nmodel Policies {\n  id            String     @id @default(uuid())\n  description   String\n  policy_number Int\n  focus_area_id Int\n  area          FocusArea  @relation(fields: [focus_area_id], references: [id])\n  strategies    Strategy[]\n}\n\nmodel TimelineOptions {\n  id         Int        @id @default(autoincrement())\n  title      String     @unique\n  strategies Strategy[]\n}\n\nmodel StatusOptions {\n  id         Int        @id @default(autoincrement())\n  title      String     @unique\n  strategies Strategy[]\n}\n\nmodel Strategy {\n  id              Int                   @id @default(autoincrement())\n  content         String\n  last_comms_date DateTime?\n  createdAt       DateTime              @default(now())\n  updatedAt       DateTime              @updatedAt\n  policy_id       String\n  strategy_number Int\n  timeline_id     Int\n  status_id       Int\n  stakeholders    Stakeholder[]\n  comments        Comment[]\n  timeline        TimelineOptions       @relation(fields: [timeline_id], references: [id])\n  status          StatusOptions         @relation(fields: [status_id], references: [id])\n  policy          Policies              @relation(fields: [policy_id], references: [id])\n  implementers    StrategyImplementer[]\n}\n\nmodel Implementer {\n  id            Int                   @id @default(autoincrement())\n  name          String\n  emails        String[]\n  phone_numbers String[]\n  createdAt     DateTime              @default(now())\n  updatedAt     DateTime              @updatedAt\n  is_board      Boolean               @default(false)\n  is_department Boolean               @default(false)\n  is_school     Boolean               @default(false)\n  cpic_smes     User[]                @relation(\"SMEtoImplementer\")\n  strategies    StrategyImplementer[]\n}\n\nmodel Stakeholder {\n  id                Int      @id @default(autoincrement())\n  name              String\n  organization_name String?\n  emails            String[]\n  phone_numbers     String[]\n  strategy_id       Int\n  strategy          Strategy @relation(fields: [strategy_id], references: [id])\n}\n\nmodel StrategyImplementer {\n  implementer_id Int\n  strategy_id    Int\n  order_number   Int?\n  createdAt      DateTime    @default(now())\n  updatedAt      DateTime    @updatedAt\n  implementer    Implementer @relation(fields: [implementer_id], references: [id])\n  strategy       Strategy    @relation(fields: [strategy_id], references: [id])\n\n  @@id([implementer_id, strategy_id])\n}\n\nmodel Comment {\n  id          Int    @id @default(autoincrement())\n  user_id     String\n  strategy_id Int\n\n  parent_id Int?\n  parent    Comment?  @relation(\"replies\", fields: [parent_id], references: [id], onDelete: Cascade)\n  children  Comment[] @relation(\"replies\")\n  content   String\n  createdAt DateTime  @default(now())\n  updatedAt DateTime  @updatedAt\n\n  user     User     @relation(fields: [user_id], references: [id])\n  strategy Strategy @relation(fields: [strategy_id], references: [id])\n}\n",
  "inlineSchemaHash": "ad2e17aa1a0a2042c7d4e6aa90399d9c7b845f1d41f0ec2e58fde08ec117d20b",
  "copyEngine": false
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"auth_source\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"google_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"display_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profile_pic\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nickname\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"given_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"family_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password_hash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"disabled\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"assigned_implementers\",\"kind\":\"object\",\"type\":\"Implementer\",\"relationName\":\"SMEtoImplementer\"},{\"name\":\"userRoles\",\"kind\":\"object\",\"type\":\"UserRole\",\"relationName\":\"UserToUserRole\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentToUser\"}],\"dbName\":null},\"Role\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userRoles\",\"kind\":\"object\",\"type\":\"UserRole\",\"relationName\":\"RoleToUserRole\"}],\"dbName\":null},\"UserRole\":{\"fields\":[{\"name\":\"role_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"role\",\"kind\":\"object\",\"type\":\"Role\",\"relationName\":\"RoleToUserRole\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserRole\"}],\"dbName\":null},\"FocusArea\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"policies\",\"kind\":\"object\",\"type\":\"Policies\",\"relationName\":\"FocusAreaToPolicies\"}],\"dbName\":null},\"Policies\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"policy_number\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"focus_area_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"area\",\"kind\":\"object\",\"type\":\"FocusArea\",\"relationName\":\"FocusAreaToPolicies\"},{\"name\":\"strategies\",\"kind\":\"object\",\"type\":\"Strategy\",\"relationName\":\"PoliciesToStrategy\"}],\"dbName\":null},\"TimelineOptions\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"strategies\",\"kind\":\"object\",\"type\":\"Strategy\",\"relationName\":\"StrategyToTimelineOptions\"}],\"dbName\":null},\"StatusOptions\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"strategies\",\"kind\":\"object\",\"type\":\"Strategy\",\"relationName\":\"StatusOptionsToStrategy\"}],\"dbName\":null},\"Strategy\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"last_comms_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"policy_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"strategy_number\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"timeline_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"stakeholders\",\"kind\":\"object\",\"type\":\"Stakeholder\",\"relationName\":\"StakeholderToStrategy\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentToStrategy\"},{\"name\":\"timeline\",\"kind\":\"object\",\"type\":\"TimelineOptions\",\"relationName\":\"StrategyToTimelineOptions\"},{\"name\":\"status\",\"kind\":\"object\",\"type\":\"StatusOptions\",\"relationName\":\"StatusOptionsToStrategy\"},{\"name\":\"policy\",\"kind\":\"object\",\"type\":\"Policies\",\"relationName\":\"PoliciesToStrategy\"},{\"name\":\"implementers\",\"kind\":\"object\",\"type\":\"StrategyImplementer\",\"relationName\":\"StrategyToStrategyImplementer\"}],\"dbName\":null},\"Implementer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emails\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone_numbers\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"is_board\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"is_department\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"is_school\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"cpic_smes\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SMEtoImplementer\"},{\"name\":\"strategies\",\"kind\":\"object\",\"type\":\"StrategyImplementer\",\"relationName\":\"ImplementerToStrategyImplementer\"}],\"dbName\":null},\"Stakeholder\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"organization_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"emails\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone_numbers\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"strategy_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"strategy\",\"kind\":\"object\",\"type\":\"Strategy\",\"relationName\":\"StakeholderToStrategy\"}],\"dbName\":null},\"StrategyImplementer\":{\"fields\":[{\"name\":\"implementer_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"strategy_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"order_number\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"implementer\",\"kind\":\"object\",\"type\":\"Implementer\",\"relationName\":\"ImplementerToStrategyImplementer\"},{\"name\":\"strategy\",\"kind\":\"object\",\"type\":\"Strategy\",\"relationName\":\"StrategyToStrategyImplementer\"}],\"dbName\":null},\"Comment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"strategy_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"parent_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"parent\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"replies\"},{\"name\":\"children\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"replies\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CommentToUser\"},{\"name\":\"strategy\",\"kind\":\"object\",\"type\":\"Strategy\",\"relationName\":\"CommentToStrategy\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = undefined
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

